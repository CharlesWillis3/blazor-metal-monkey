@inject Microsoft.Extensions.Logging.ILogger<Index> Logger
@inject NavigationManager Navigation

@using Microsoft.Extensions.Logging

@*@GetContent()*@



@code{
    [Parameter]
    public string? Section { get; set; }

    [Parameter]
    public string? Page { get; set; }

    //protected RenderFragment? GetContent() => builder =>
    //{
    //    builder.OpenComponent(0, ResolveSite("MetalSite")
    //        .Sections
    //        .Single(sec => sec.Name.CaseInsensitiveEquals(Section))
    //        .Template
    //        .IndexLayoutType);
    //    builder.CloseComponent();
    //};

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        var route = Navigation.ToBaseRelativePath(Navigation.Uri);
        var segments = route.Split(new char[] { '/', '\\' });
        Logger.LogInformation("++++----++++: {0}", route);
        await base.SetParametersAsync(parameters);
        Section = Section ?? segments.ElementAtOrDefault(0) ?? string.Empty;
        Page = Page ?? segments.ElementAtOrDefault(1) ?? string.Empty;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Logger.LogInformation("Section='{0}', Page='{1}'", Section, Page);
    }

}